// <auto-generated />
using System;
using ES2Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ES2Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250315132905_UpdateUtilizadorPassword")]
    partial class UpdateUtilizadorPassword
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ES2Backend.Models.Membro", b =>
                {
                    b.Property<int>("IdMembro")
                        .HasColumnType("integer")
                        .HasColumnName("idMembro");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean")
                        .HasColumnName("estado");

                    b.Property<int>("IdProjeto")
                        .HasColumnType("integer")
                        .HasColumnName("idProjeto");

                    b.Property<int>("IdUtilizador")
                        .HasColumnType("integer")
                        .HasColumnName("idUtilizador");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("username");

                    b.HasKey("IdMembro")
                        .HasName("Membro_pkey");

                    b.HasIndex("IdProjeto");

                    b.HasIndex("IdUtilizador");

                    b.ToTable("Membro", (string)null);
                });

            modelBuilder.Entity("ES2Backend.Models.Projeto", b =>
                {
                    b.Property<int>("IdProjeto")
                        .HasColumnType("integer")
                        .HasColumnName("idProjeto");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("descricao");

                    b.Property<int>("IdUtilizador")
                        .HasColumnType("integer")
                        .HasColumnName("idUtilizador");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomeCliente");

                    b.Property<decimal>("PrecoHora")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("precoHora");

                    b.HasKey("IdProjeto")
                        .HasName("Projeto_pkey");

                    b.HasIndex("IdUtilizador");

                    b.ToTable("Projeto", (string)null);
                });

            modelBuilder.Entity("ES2Backend.Models.Tarefa", b =>
                {
                    b.Property<int>("IdTarefa")
                        .HasColumnType("integer")
                        .HasColumnName("idTarefa");

                    b.Property<DateOnly>("DataInicio")
                        .HasColumnType("date")
                        .HasColumnName("dataInicio");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("descricao");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean")
                        .HasColumnName("estado");

                    b.Property<decimal>("PrecoHora")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("precoHora");

                    b.HasKey("IdTarefa")
                        .HasName("Tarefa_pkey");

                    b.ToTable("Tarefa", (string)null);
                });

            modelBuilder.Entity("ES2Backend.Models.Utilizador", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .HasColumnType("integer")
                        .HasColumnName("idUtilizador");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<decimal>("NumHoras")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("numHoras");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("username");

                    b.HasKey("IdUtilizador")
                        .HasName("Utilizador_pkey");

                    b.ToTable("Utilizador", (string)null);
                });

            modelBuilder.Entity("TarefaProjeto", b =>
                {
                    b.Property<int>("IdProjeto")
                        .HasColumnType("integer")
                        .HasColumnName("idProjeto");

                    b.Property<int>("IdTarefa")
                        .HasColumnType("integer")
                        .HasColumnName("idTarefa");

                    b.HasKey("IdProjeto", "IdTarefa")
                        .HasName("TarefaProjeto_pkey");

                    b.HasIndex("IdTarefa");

                    b.ToTable("TarefaProjeto", (string)null);
                });

            modelBuilder.Entity("TarefaUtilizador", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .HasColumnType("integer")
                        .HasColumnName("idUtilizador");

                    b.Property<int>("IdTarefa")
                        .HasColumnType("integer")
                        .HasColumnName("idTarefa");

                    b.HasKey("IdUtilizador", "IdTarefa")
                        .HasName("TarefaUtilizador_pkey");

                    b.HasIndex("IdTarefa");

                    b.ToTable("TarefaUtilizador", (string)null);
                });

            modelBuilder.Entity("ES2Backend.Models.Membro", b =>
                {
                    b.HasOne("ES2Backend.Models.Projeto", "IdProjetoNavigation")
                        .WithMany("Membros")
                        .HasForeignKey("IdProjeto")
                        .IsRequired()
                        .HasConstraintName("FK_idProjeto");

                    b.HasOne("ES2Backend.Models.Utilizador", "IdUtilizadorNavigation")
                        .WithMany("Membros")
                        .HasForeignKey("IdUtilizador")
                        .IsRequired()
                        .HasConstraintName("FK_idUtilizador");

                    b.Navigation("IdProjetoNavigation");

                    b.Navigation("IdUtilizadorNavigation");
                });

            modelBuilder.Entity("ES2Backend.Models.Projeto", b =>
                {
                    b.HasOne("ES2Backend.Models.Utilizador", "IdUtilizadorNavigation")
                        .WithMany("Projetos")
                        .HasForeignKey("IdUtilizador")
                        .IsRequired()
                        .HasConstraintName("FK_idUtilizador");

                    b.Navigation("IdUtilizadorNavigation");
                });

            modelBuilder.Entity("TarefaProjeto", b =>
                {
                    b.HasOne("ES2Backend.Models.Projeto", null)
                        .WithMany()
                        .HasForeignKey("IdProjeto")
                        .IsRequired()
                        .HasConstraintName("FK_idProjeto");

                    b.HasOne("ES2Backend.Models.Tarefa", null)
                        .WithMany()
                        .HasForeignKey("IdTarefa")
                        .IsRequired()
                        .HasConstraintName("FK_idTarefa");
                });

            modelBuilder.Entity("TarefaUtilizador", b =>
                {
                    b.HasOne("ES2Backend.Models.Tarefa", null)
                        .WithMany()
                        .HasForeignKey("IdTarefa")
                        .IsRequired()
                        .HasConstraintName("FK_idTarefa");

                    b.HasOne("ES2Backend.Models.Utilizador", null)
                        .WithMany()
                        .HasForeignKey("IdUtilizador")
                        .IsRequired()
                        .HasConstraintName("FK_idUtilizador");
                });

            modelBuilder.Entity("ES2Backend.Models.Projeto", b =>
                {
                    b.Navigation("Membros");
                });

            modelBuilder.Entity("ES2Backend.Models.Utilizador", b =>
                {
                    b.Navigation("Membros");

                    b.Navigation("Projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
